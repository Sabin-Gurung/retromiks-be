{:paths ["src" "resources"]
 :deps {org.clojure/clojure {:mvn/version "1.11.3"}
        clj-http/clj-http {:mvn/version "3.13.0"}
        metosin/jsonista {:mvn/version "0.3.8"}

        ;component
        integrant/integrant {:mvn/version "0.10.0"}
        integrant/repl {:mvn/version "0.3.3"}

        ; database
        ; com.github.seancorfield/next.jdbc {:mvn/version "1.3.939"}
        ; org.postgresql/postgresql {:mvn/version "42.2.10"}
        ; hikari-cp/hikari-cp {:mvn/version "3.0.1"}
        ; tick/tick {:mvn/version "0.7.5"}
        mock-clj/mock-clj {:mvn/version "0.2.1"}

        ; api
        metosin/reitit {:mvn/version "0.7.0"}
        ring/ring-jetty-adapter {:mvn/version "1.12.2"}
        ring-cors/ring-cors {:mvn/version "0.1.13"}

        ;config
        aero/aero {:mvn/version "1.1.6"}}

 :aliases {:run {:main-opts ["-m" "insta-mem.core"]}
           :build      {:deps       {io.github.seancorfield/build-clj
                                     {:git/tag   "v0.6.3" :git/sha "9b8e09b"
                                      ;; since we're building an app uberjar, we do not
                                      ;; need deps-deploy for clojars.org deployment:
                                      :deps/root "slim"}}
                        :ns-default build}
           :test       {:extra-paths ["test"]
                        :main-opts   ["-m" "cognitect.test-runner"]
                        :extra-deps  {org.clojure/test.check {:mvn/version "1.1.1"}
                                      io.github.cognitect-labs/test-runner
                                      {:git/tag "v0.5.1" :git/sha "dfb30dd"}}}

           :repl/nrepl {:extra-deps {nrepl/nrepl {:mvn/version "1.0.0"}}
                        :main-opts  ["-m" "nrepl.cmdline"]}}}

; clj -M:run // run main commnad
; clj -X:run-x // run any executable function

; clj -M:run-m:env/dev // run with custom profiles
; clj -X:run-x:env/prod // run with custom profiles

; clj -M:test // run any executable function

; clj -M:repl/nrepl // run repl
; clj -M:repl/nrepl:env/dev // run repl in certain environment

; clj -T:build build/ci // build uber jar

